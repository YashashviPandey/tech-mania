{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Punisher\\\\Desktop\\\\New folder\\\\tech-mania\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";var initial_state={data:{},userData:[],printData:[],isLoggedIn:false,isRegister:false,images:[],header:\"\",checkLIst:[],dodValue:[]};export default function facebookReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initial_state;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"UPDATEDATA\":{return _objectSpread(_objectSpread({},state),{},{printData:state.printData.map(function(existingLink,currentIndex){return action.index===currentIndex?action.data:existingLink;}),isLoggedIn:true});}default:return initial_state;}}","map":{"version":3,"sources":["C:/Users/Punisher/Desktop/New folder/tech-mania/src/Store/Reducers/data.js"],"names":["initial_state","data","userData","printData","isLoggedIn","isRegister","images","header","checkLIst","dodValue","facebookReducer","state","action","type","map","existingLink","currentIndex","index"],"mappings":"+IAAA,GAAMA,CAAAA,aAAa,CAAG,CAClBC,IAAI,CAAE,EADY,CAElBC,QAAQ,CAAC,EAFS,CAGlBC,SAAS,CAAC,EAHQ,CAIlBC,UAAU,CAAC,KAJO,CAKlBC,UAAU,CAAC,KALO,CAMlBC,MAAM,CAAC,EANW,CAOlBC,MAAM,CAAC,EAPW,CAQlBC,SAAS,CAAC,EARQ,CASlBC,QAAQ,CAAC,EATS,CAAtB,CAYA,cAAe,SAASC,CAAAA,eAAT,EAAwD,IAA/BC,CAAAA,KAA+B,2DAAvBX,aAAuB,IAARY,CAAAA,MAAQ,2CACnE,OAAQA,MAAM,CAACC,IAAf,EACI,IAAK,YAAL,CAAmB,CACf,sCACOF,KADP,MAEIR,SAAS,CAAEQ,KAAK,CAACR,SAAN,CAAgBW,GAAhB,CAAoB,SAACC,YAAD,CAAeC,YAAf,QAAgCJ,CAAAA,MAAM,CAACK,KAAP,GAAiBD,YAAjB,CAAgCJ,MAAM,CAACX,IAAvC,CAA8Cc,YAA9E,EAApB,CAFf,CAGIX,UAAU,CAAC,IAHf,GAMH,CACD,QACI,MAAOJ,CAAAA,aAAP,CAVR,CAYH","sourcesContent":["const initial_state = {\r\n    data: {},\r\n    userData:[],\r\n    printData:[],\r\n    isLoggedIn:false,\r\n    isRegister:false,\r\n    images:[],\r\n    header:\"\",\r\n    checkLIst:[],\r\n    dodValue:[]\r\n}\r\n\r\nexport default function facebookReducer(state = initial_state, action) {\r\n    switch (action.type) {       \r\n        case \"UPDATEDATA\": {\r\n            return { \r\n                ...state,\r\n                printData: state.printData.map((existingLink, currentIndex) => action.index === currentIndex ? action.data : existingLink),\r\n                isLoggedIn:true\r\n\r\n            }\r\n        }\r\n        default:\r\n            return initial_state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}