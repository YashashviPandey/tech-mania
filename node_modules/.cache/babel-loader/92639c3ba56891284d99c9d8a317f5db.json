{"ast":null,"code":"const initial_state = {\n  data: {},\n  userData: [],\n  printData: [],\n  isLoggedIn: false,\n  isRegister: false,\n  images: [],\n  header: \"\",\n  checkLIst: [],\n  dodValue: []\n};\nexport default function facebookReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial_state;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"UPDATEDATA\":\n      {\n        return { ...state,\n          printData: state.printData.map((existingLink, currentIndex) => action.index === currentIndex ? action.data : existingLink),\n          isLoggedIn: true\n        };\n      }\n\n    default:\n      return initial_state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Punisher/Desktop/New folder/tech-mania/src/Store/Reducers/data.js"],"names":["initial_state","data","userData","printData","isLoggedIn","isRegister","images","header","checkLIst","dodValue","facebookReducer","state","action","type","map","existingLink","currentIndex","index"],"mappings":"AAAA,MAAMA,aAAa,GAAG;AAClBC,EAAAA,IAAI,EAAE,EADY;AAElBC,EAAAA,QAAQ,EAAC,EAFS;AAGlBC,EAAAA,SAAS,EAAC,EAHQ;AAIlBC,EAAAA,UAAU,EAAC,KAJO;AAKlBC,EAAAA,UAAU,EAAC,KALO;AAMlBC,EAAAA,MAAM,EAAC,EANW;AAOlBC,EAAAA,MAAM,EAAC,EAPW;AAQlBC,EAAAA,SAAS,EAAC,EARQ;AASlBC,EAAAA,QAAQ,EAAC;AATS,CAAtB;AAYA,eAAe,SAASC,eAAT,GAAwD;AAAA,MAA/BC,KAA+B,uEAAvBX,aAAuB;AAAA,MAARY,MAAQ;;AACnE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,YAAL;AAAmB;AACf,eAAO,EACH,GAAGF,KADA;AAEHR,UAAAA,SAAS,EAAEQ,KAAK,CAACR,SAAN,CAAgBW,GAAhB,CAAoB,CAACC,YAAD,EAAeC,YAAf,KAAgCJ,MAAM,CAACK,KAAP,KAAiBD,YAAjB,GAAgCJ,MAAM,CAACX,IAAvC,GAA8Cc,YAAlG,CAFR;AAGHX,UAAAA,UAAU,EAAC;AAHR,SAAP;AAMH;;AACD;AACI,aAAOJ,aAAP;AAVR;AAYH","sourcesContent":["const initial_state = {\r\n    data: {},\r\n    userData:[],\r\n    printData:[],\r\n    isLoggedIn:false,\r\n    isRegister:false,\r\n    images:[],\r\n    header:\"\",\r\n    checkLIst:[],\r\n    dodValue:[]\r\n}\r\n\r\nexport default function facebookReducer(state = initial_state, action) {\r\n    switch (action.type) {       \r\n        case \"UPDATEDATA\": {\r\n            return { \r\n                ...state,\r\n                printData: state.printData.map((existingLink, currentIndex) => action.index === currentIndex ? action.data : existingLink),\r\n                isLoggedIn:true\r\n\r\n            }\r\n        }\r\n        default:\r\n            return initial_state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}